{"version":3,"sources":["components/Section/Section.js","components/Line/Line.js","dto.js","components/ListItem/ListItem.js","components/SettingsScreen/SettingsScreen.js","store/commandStore.js","components/Control/Control.js","components/EngineControl/EngineControl.js","components/ControlPanel/ControlPanel.js","components/Main/Main.js","App.js","store/createStoreProvider.js","index.js"],"names":["Section","children","className","Line","ACTION_TYPE","PUSH","TOGGLE","SLOT","MAIN","S1","S2","S3","S4","S5","S6","S7","S8","S9","S10","COMMAND","REG","HELLO","ARM_ON","BEAM_ON","BEAM_OFF","DISARM_ON","KEY_1_ON","KEY_1_OFF","KEY_2_ON","KEY_2_OFF","LIGHT_ON","LIGHT_OFF","START_ON","START_OFF","ListItem","title","subTitle","right","actions","name","command","on","off","type","slot","getCommandKeyByCode","commandCode","Object","entries","find","SettingsScreen","map","action","key","Context","React","createContext","useCommandStore","useContext","Control","status","pushCommand","classNames","push","join","onClick","EngineControl","ControlPanel","statuses","getAction","includes","isActionEnabled","Main","path","render","App","providers","StoreProvider","useState","setStatuses","value","actionName","nextStatus","filter","it","setStatus","console","info","Provider","reverse","reduce","tree","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.91026b54.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Section.scss';\n\nfunction Section({\n     children\n }) {\n    return <div className={'Section'}>\n        {children}\n    </div>;\n}\n\nexport default Section;\n","import React from 'react';\n\nimport './Line.scss';\n\nfunction Line({\n    children,\n}) {\n    return <div className={'Line'}>\n        {children}\n    </div>;\n}\n\nexport default Line;\n","const ACTION_TYPE = {\n    PUSH: 'PUSH',\n    TOGGLE: 'TOGGLE',\n};\n\nconst SLOT = {\n    MAIN: 'MAIN',\n    S1: 'S1',\n    S2: 'S2',\n    S3: 'S3',\n    S4: 'S4',\n    S5: 'S5',\n    S6: 'S6',\n    S7: 'S7',\n    S8: 'S8',\n    S9: 'S9',\n    S10: 'S10',\n};\n\nconst COMMAND = {\n    REG: 'REG',\n    HELLO: 'HELLO',\n    ARM_ON: \"n\",\n    BEAM_ON: \"m\",\n    BEAM_OFF: \"e\",\n    DISARM_ON: \"y\",\n    KEY_1_ON: \"i\",\n    KEY_1_OFF: \"a\",\n    KEY_2_ON: \"j\",\n    KEY_2_OFF: \"b\",\n    LIGHT_ON: \"l\",\n    LIGHT_OFF: \"d\",\n    START_ON: \"k\",\n    START_OFF: \"c\",\n};\n\nexport {\n    ACTION_TYPE,\n    SLOT,\n    COMMAND,\n};\n","import React from 'react';\n\nimport './ListItem.scss';\n\nfunction ListItem({\n    title,\n                      subTitle,\n                      right,\n                  }) {\n    return <div className={'ListItem'}>\n        <div className={'ListItem-info'}>\n            <b>{title}</b>\n            <div>{subTitle}</div>\n        </div>\n        <div className={'ListItem-right'}>{right}</div>\n    </div>;\n}\n\nexport default ListItem;\n","import React, {Fragment} from 'react';\n\nimport ListItem from \"../ListItem/ListItem\";\nimport {ACTION_TYPE, COMMAND, SLOT} from \"../../dto\";\n\nexport const actions = [\n    {\n        name: 'Engine',\n        command: {\n            on: COMMAND.START_ON,\n            off: COMMAND.START_OFF,\n        },\n        type: ACTION_TYPE.TOGGLE,\n        slot: SLOT.MAIN,\n    },\n    {\n        name: 'Lock',\n        command: {\n            on: COMMAND.ARM_ON,\n        },\n        type: ACTION_TYPE.PUSH,\n        slot: SLOT.S1,\n    },\n    {\n        name: 'Unlock',\n        command: {\n            on: COMMAND.DISARM_ON,\n        },\n        type: ACTION_TYPE.PUSH,\n        slot: SLOT.S2,\n    },\n    {\n        name: 'Light on',\n        command: {\n            on: COMMAND.LIGHT_ON,\n        },\n        type: ACTION_TYPE.PUSH,\n        slot: SLOT.S3,\n    },\n    {\n        name: 'Light off',\n        command: {\n            on: COMMAND.LIGHT_OFF,\n        },\n        type: ACTION_TYPE.PUSH,\n        slot: SLOT.S4,\n    },\n    {\n        name: 'Beam',\n        command: {\n            on: COMMAND.BEAM_ON,\n            off: COMMAND.BEAM_OFF,\n        },\n        type: ACTION_TYPE.TOGGLE,\n        slot: SLOT.S5,\n    },\n];\n\nfunction getCommandKeyByCode(commandCode) {\n    return Object\n        .entries(COMMAND)\n        .find(([_, code]) => code === commandCode)[0];\n}\n\nfunction SettingsScreen() {\n    return <div className={'SettingsScreen'}>\n        {actions.map(action => {\n            return <ListItem\n                key={action.name}\n                title={action.name}\n                subTitle={action.slot}\n                right={<Fragment>\n                    <div>\n                    <b>Type:</b> {action.type}\n                    </div>\n                    <div>\n                    <b>On:</b> {getCommandKeyByCode(action.command.on)}\n                    </div>\n                    <div>\n                    {action.type === ACTION_TYPE.TOGGLE ? <Fragment><b>Off:</b> {getCommandKeyByCode(action.command.off)}</Fragment> : null}\n                    </div>\n                </Fragment>}\n            />;\n        })}\n    </div>;\n}\n\nexport default SettingsScreen;\n","import React, { useState, useCallback } from 'react';\nimport {ACTION_TYPE} from \"../dto\";\nimport {actions} from \"../components/SettingsScreen/SettingsScreen\";\n\nconst Context = React.createContext();\n\nexport const CommandProvider = ({children}) => {\n    const [statuses, setStatuses] = useState([]);\n\n    const setStatus = (actionName, status) => {\n        if (status) {\n            setStatuses(statuses => statuses.filter(it => it !== actionName));\n        }\n        else {\n            setStatuses([...statuses, actionName]);\n        }\n    };\n\n    const pushCommand = (commandCode, actionName) => {\n        // some http call here\n        const isOn = statuses.includes(actionName);\n        const response = {\n            message: isOn,\n        };\n        const nextStatus = response.message;\n        const action = actions.find(action => action.name === actionName);\n        if (action.type === ACTION_TYPE.TOGGLE) {\n            setStatus(actionName, nextStatus);\n        }\n\n        console.info('COMMAND - ' + commandCode + ' ... STATUS - ' + nextStatus);\n    };\n\n    const value = {\n        statuses,\n\n        pushCommand,\n    };\n\n    return <Context.Provider value={value}>\n        {children}\n    </Context.Provider>;\n};\n\nexport const useCommandStore = () => React.useContext(Context);\n","import React from 'react';\n\nimport './Control.scss';\nimport {useCommandStore} from \"../../store/commandStore\";\nimport {ACTION_TYPE} from \"../../dto\";\n\nfunction Control({\n    name,\n    type,\n    status,\n    command,\n }) {\n    const {\n        pushCommand,\n    } = useCommandStore();\n\n    const classNames = ['Control'];\n    type && classNames.push(`Control--TYPE-${type}`);\n    !name && classNames.push(`Control--hidden`);\n\n    const handleClick = () => {\n        if (type === ACTION_TYPE.PUSH) {\n            pushCommand(command.on, name);\n        }\n        else if (type === ACTION_TYPE.TOGGLE) {\n            if (status) {\n                pushCommand(command.off, name);\n            }\n            else {\n                pushCommand(command.on, name);\n            }\n        }\n    };\n\n    status && classNames.push(`Control--on`);\n\n    return <div className={classNames.join(' ')} onClick={() => handleClick()}>\n        {name} {!status ? 'On' : 'Off'}\n    </div>;\n}\n\nexport default Control;\n","import React from 'react';\n\nimport './EngineControl.scss';\nimport {useCommandStore} from \"../../store/commandStore\";\nimport {ACTION_TYPE} from \"../../dto\";\n\nfunction EngineControl({\n   name,\n   type,\n   status,\n   command,\n}) {\n    const {\n        pushCommand,\n    } = useCommandStore();\n\n    const classNames = ['EngineControl'];\n    type && classNames.push(`EngineControl--TYPE-${type}`);\n    !name && classNames.push(`EngineControl--hidden`);\n\n    const handleClick = () => {\n        if (type === ACTION_TYPE.PUSH) {\n            pushCommand(command.on, name);\n        }\n        else if (type === ACTION_TYPE.TOGGLE) {\n            if (status) {\n                pushCommand(command.off, name);\n            }\n            else {\n                pushCommand(command.on, name);\n            }\n        }\n    };\n\n    status && classNames.push(`EngineControl--on`);\n\n    return <div className={classNames.join(' ')} onClick={() => handleClick()}>\n        {name}<br />{!status ? 'Start' : 'Stop'}\n    </div>;\n}\n\nexport default EngineControl;\n","import React from 'react';\nimport Section from \"../Section/Section\";\n\nimport './ControlPanel.scss';\nimport Line from \"../Line/Line\";\nimport Control from \"../Control/Control\";\nimport EngineControl from \"../EngineControl/EngineControl\";\nimport {actions} from '../SettingsScreen/SettingsScreen';\nimport {SLOT} from \"../../dto\";\nimport {useCommandStore} from \"../../store/commandStore\";\n\nfunction ControlPanel() {\n    const {\n        statuses,\n    } = useCommandStore();\n\n    const getAction = slot => {\n        const action = actions.find(action => action.slot === slot);\n        const status = statuses.includes(action.name);\n        return {\n            ...action,\n            status,\n        };\n    };\n    const isActionEnabled = slot => !!actions.find(action => action.slot === slot && action.name);\n\n    return <div className={'ControlPanel'}>\n        <Section>\n            <div className={'app-name'}>Auto Starter Pro</div>\n            <Line>\n                <div className={'row flex align-center'}>\n                    <div className={'col-4'}>\n                        <Control {...getAction(SLOT.S1)} />\n                    </div>\n                    <div className={'col-4'}>\n                        <div className={'car-info'}>Toyota Camry VI 2.4 V40 (2009)</div>\n                    </div>\n                    <div className={'col-4'}>\n                        <Control {...getAction(SLOT.S2)} />\n                    </div>\n                </div>\n            </Line>\n        </Section>\n        <Section>\n            <div className={'flex justify-center'}>\n                <EngineControl {...getAction(SLOT.MAIN)} />\n            </div>\n        </Section>\n        <Section>\n            <Line>\n                <div className={'row'}>\n                    <div className={'col-5'}>\n                        <Control {...getAction(SLOT.S3)} />\n                    </div>\n                    <div className={'col-2'}></div>\n                    <div className={'col-5'}>\n                        <Control {...getAction(SLOT.S4)} />\n                    </div>\n                </div>\n            </Line>\n        </Section>\n\n        {(isActionEnabled(SLOT.S5) || isActionEnabled(SLOT.S6)) ? (\n            <Section>\n                <Line>\n                    <div className={'row'}>\n                        <div className={'col-4'}>\n                            <Control {...getAction(SLOT.S5)} />\n                        </div>\n                        <div className={'col-4'}>\n                            {/*engine<br />status*/}\n                        </div>\n                        <div className={'col-4'}>\n                            {/*<Control {...getAction(SLOT.S6)} />*/}\n                        </div>\n                    </div>\n                </Line>\n            </Section>\n        ) : null}\n\n        {/*{(isActionEnabled('f5') && isActionEnabled('f6') && isActionEnabled('f7') && isActionEnabled('f8')) ? (*/}\n        {/*    <Section>*/}\n        {/*        {(isActionEnabled('f5') && isActionEnabled('f6')) ? (*/}\n        {/*            <Line>*/}\n        {/*                <div className={'row'}>*/}\n        {/*                    <div className={'col-6'}>*/}\n        {/*                        <Control {...getAction('f5')} />*/}\n        {/*                    </div>*/}\n        {/*                    <div className={'col-6'}>*/}\n        {/*                        <Control {...getAction('f6')} />*/}\n        {/*                    </div>*/}\n        {/*                </div>*/}\n        {/*            </Line>*/}\n        {/*        ) : null}*/}\n        {/*        {(isActionEnabled('f7') && isActionEnabled('f8')) ? (*/}\n        {/*            <Line>*/}\n        {/*                <div className={'row'}>*/}\n        {/*                    <div className={'col-6'}>*/}\n        {/*                        <Control {...getAction('f7')} />*/}\n        {/*                    </div>*/}\n        {/*                    <div className={'col-6'}>*/}\n        {/*                        <Control {...getAction('f8')} />*/}\n        {/*                    </div>*/}\n        {/*                </div>*/}\n        {/*            </Line>*/}\n        {/*        ) : null}*/}\n        {/*    </Section>*/}\n        {/*) : null}*/}\n    </div>;\n}\n\nexport default ControlPanel;\n","import React from 'react';\nimport ControlPanel from \"../ControlPanel/ControlPanel\";\nimport {Route, Switch} from \"react-router-dom\";\nimport SettingsScreen from \"../SettingsScreen/SettingsScreen\";\n\nfunction Main() {\n    return <div className={'Main'}>\n        <Switch>\n            <Route path={'/settings'} render={() => <SettingsScreen />} />\n            <Route render={() => <ControlPanel />} />\n        </Switch>\n    </div>;\n}\n\nexport default Main;\n","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Main from './components/Main/Main';\nimport {BrowserRouter} from \"react-router-dom\";\n\nfunction App() {\n  return <BrowserRouter>\n    <Main />\n  </BrowserRouter>;\n}\n\nexport default App;\n","import React from 'react';\n\nexport default providers => ({ children }) => providers.reverse().reduce((tree, Provider) => <Provider>{tree}</Provider>, children);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport createStoreProvider from './store/createStoreProvider';\nimport {CommandProvider} from \"./store/commandStore\";\n\nconst StoreProvider = createStoreProvider([\n    CommandProvider,\n]);\n\nReactDOM.render(<StoreProvider>\n    <App />\n</StoreProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\n"],"sourceRoot":""}